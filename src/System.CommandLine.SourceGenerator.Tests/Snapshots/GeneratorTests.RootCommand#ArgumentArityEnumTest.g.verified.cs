//HintName: ArgumentArityEnumTest.g.cs
// <auto-generated/>
using global::System.CommandLine.SourceGenerator.Common;

namespace System.CommandLine.SourceGenerator.Tests
{
    public static class ArgumentArityEnumTestFactory
    {
        public static global::System.CommandLine.RootCommand Create()
        {
            var symbol = new global::System.CommandLine.Option<global::System.Boolean>("--Zero", null)
            {
                Arity = global::System.CommandLine.ArgumentArity.Zero
            };
            var symbol1 = new global::System.CommandLine.Option<global::System.Boolean>("--ZeroOrOne", null)
            {
                Arity = global::System.CommandLine.ArgumentArity.ZeroOrOne
            };
            var symbol2 = new global::System.CommandLine.Option<global::System.Boolean>("--ExactlyOne", null)
            {
                Arity = global::System.CommandLine.ArgumentArity.ExactlyOne
            };
            var symbol3 = new global::System.CommandLine.Option<global::System.Boolean>("--ZeroOrMore", null)
            {
                Arity = global::System.CommandLine.ArgumentArity.ZeroOrMore
            };
            var symbol4 = new global::System.CommandLine.Option<global::System.Boolean>("--OneOrMore", null)
            {
                Arity = global::System.CommandLine.ArgumentArity.OneOrMore
            };
            var cmd = new global::System.CommandLine.RootCommand("");
            cmd.AddOption(symbol);
            cmd.AddOption(symbol1);
            cmd.AddOption(symbol2);
            cmd.AddOption(symbol3);
            cmd.AddOption(symbol4);
            return cmd;
        }
    }
}
